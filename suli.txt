/* post method, mert a body-ban küldjük */
  app.post('/celok', (req, res) => {

    const searching = req.body.searching;

    kapcsolat();

    connection.query('SELECT * FROM celok WHERE celok_nev LIKE ?', [`%${searching}%`], function (err, result) {

      if (err) {
        return res.status(500).json('Hiba');
      }

      res.status(200).json(result);

    })    

    connection.end();
  })   

  Törlés tesztelése:
…/torles/23
	/* post method, mert a body-ban küldjük */
	app.delete('/kapcsolatok', (req, res) => {

  	const id = req.params.id;
 
  	kapcsolat();
 
  	connection.query('DELETE FROM kapcsolatfelvetel WHERE id = ?', [id], function (err, result) {
 
    	if (err) {
      	return res.status(500).json('Hiba');
    	}
 
    	res.status(200).json(result);
    	connection.end();
  	})    
 
	})  

    frontend kommunikáció:
    function kapcsolat(){
        
        /* json objektum */
        var bemenet={
            nev:document.getElementById("name").value,
            email:document.getElementById("email").value,
            telefon:document.getElementById("phone").value,
            message:document.getElementById("message").value
        
            
        }
        fetch("http://localhost:3000/kapcsolatok", {
            method: "",
            body: JSON.stringify(bemenet),
            headers: {"Content-type": "application/json; charset=UTF-8"}
          }
        
        )
        .then(x => x.text())
        .then(y => {
            // alert(y);
    
            document.getElementById("siker").innerHTML = y;
             
        });
    
        
    }

    sync function
    async function uticelok() {
        const res = await fetch("http://localhost:3000/celok");
        const celok = await res.json();
    
        let celokHTML = "";
        // col-lg-4 == 3 hasáb
        for (const cel of celok) {
            celokHTML += `
            <div class="col-lg-4 ml-auto">
                <img src="${cel.celok_kep}" alt="${cel.celok_nev}" class="img-fluid">
                <p class="alairas">${cel.celok_nev}</p>   
           </div>
            
            `;
        }
        document.getElementById("celok").innerHTML = celokHTML;
    }

    
    router.post('/update/:tablename/:id', function(req, res){
    
        const data = req.body;
        const tableName = req.params.tablename;  
        const id = req.params.id;
    
        let sql = `UPDATE ${tableName} SET `;
        const updates = Object.keys(data).map(field => `${field} = ?`).join(', '); // Elkészítjük a mezők és értékek részét
        sql += updates + ' WHERE id = ?'; // Hozzáfűzzük a WHERE feltételt
    
        connection.query(sql, [...Object.values(data), id], (err, result) => {
            if (err) {
                return res.json({success: false});
            }
    
            return res.json({success: true});
        });
    });

    
    / Új adat felvitele
document.getElementById('create-series').onsubmit = async function (event) {
    event.preventDefault();  // meggátolja a form alapértelmezett működését
    const name = event.target.elements.name.value;
}

const hasSearchField = this.gridFields.some(field => field.search === true);

formContainer.querySelector('form').addEventListener('submit', this.onNewSave.bind(this));


try {
    const res = await fetch(`/insert/${this.tableName}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(jsonData)
    });
    const data = await res.json();

    if (data.success) {
        const id = data.id;
        // a form mezőinek törlése mentés után
        this.ResetFields(event.target);
        // új rekord felvitele után callback függvény hívása
        this.triggerEvent("afternewsave", id);
    }
    else
    {
        alert('Hiba: ' + JSON.stringify(data));
    }
    

    const formControls = modalElements.querySelectorAll('.form-control'); // [type="text"]   


alap.js:
async function uticelok() {
    const res = await fetch("http://localhost:3000/celok");
    const celok = await res.json();
    console.log(celok);

    let celokHTML = "";
    for (const cel of celok) {
        celokHTML += `
        <div class="col-lg-4 ml-auto">
            <img src="kepek/${cel.celok_kep}" alt="${cel.celok_neve}" class="img-fluid">
            <p class="alairas">${cel.celok_nev}</p>
        </div>
        `;
    }
    document.getElementById("celok").innerHTML = celokHTML;
}

async function kereses() {
    const searching = document.getElementById('keresendo').value;

    const res = await fetch('http://localhost:3000/celok', {
        method: "POST",
        headers: { "Content-type": "application/json; charset=UTF-8" },
        body: JSON.stringify({ searching })
    });
    const adatok = await res.json();

    let keresesHTML = "ul";
    for (const adat of adatok) {
        keresesHTML += `
                 <li class="lista">
                     <img src="kepek/${adat.celok_kep}" alt="${adat.celok_nev}" style="width: 100px;">
                     <span class="kephez">${adat.celok_nev}</span>
                 </li>
             `;
    }
    keresesHTML += "</ul>";
    document.getElementById("talalat").innerHTML = keresesHTML;
}